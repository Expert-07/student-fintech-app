{"version":3,"file":"SmartReminders-C1sZ-OvL.js","sources":["../../src/pages/SmartReminders.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport BottomNav from './BottomNav';\r\n\r\nconst SmartReminders = () => {\r\n  const [reminders, setReminders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n\r\n    const fetchReminders = async () => {\r\n      const token = localStorage.getItem('token'); // adjust if you store elsewhere\r\n      const userId = localStorage.getItem('userId');\r\n\r\n      if (!token) {\r\n        console.error(\"Token not found\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const res = await fetch(`http://localhost:5000/api/timetable/upcoming/${userId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        if (!res.ok) {\r\n          const errorData = await res.json();\r\n          console.error('Failed to fetch reminders:', errorData.message);\r\n          return;\r\n        }\r\n\r\n        const data = await res.json();\r\n        console.log('Fetched reminders:', data);\r\n\r\n        if (data && !data.message) {\r\n          if (reminders.length > 0 && reminders[0].id !== data.id) {\r\n            // New reminder detected\r\n            if (onNewReminder) onNewReminder(\"You have a new upcoming class reminder!\");\r\n          }\r\n          setReminders([data]);\r\n        } else {\r\n          setReminders([]);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching reminders:', err);\r\n      }\r\n    };\r\n\r\n    fetchReminders();\r\n    intervalId = setInterval(fetchReminders, 120000); // Poll every 60 seconds\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {reminders.length === 0 ? (\r\n        <p>No upcoming classes</p>\r\n      ) : (\r\n        <ul>\r\n          {reminders.map((reminder) => (\r\n            <li key={reminder.id} className=\"mb-2 border p-2 rounded\">\r\n              <div className=\"font-bold\">{reminder.course_name || reminder.activity}</div>\r\n              <div>{reminder.date} @ {reminder.start_time}</div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmartReminders;"],"names":["SmartReminders","reminders","setReminders","useState","useEffect","intervalId","fetchReminders","async","token","localStorage","getItem","userId","res","fetch","method","headers","Authorization","ok","errorData","json","console","error","message","data","log","length","id","onNewReminder","err","setInterval","clearInterval","children","jsx","map","reminder","jsxs","className","course_name","activity","date","start_time"],"mappings":"+CAGA,MAAMA,EAAiB,KACrB,MAAOC,EAAWC,GAAgBC,EAAAA,SAAS,IAmD3C,OAjDAC,EAAAA,UAAU,KACR,IAAIC,EAEJ,MAAMC,EAAiBC,UACrB,MAAMC,EAAQC,aAAaC,QAAQ,SAC7BC,EAASF,aAAaC,QAAQ,UAEpC,GAAKF,EAKL,IACE,MAAMI,QAAYC,MAAM,gDAAgDF,IAAU,CAChFG,OAAQ,MACRC,QAAS,CACPC,cAAiB,UAAUR,OAI/B,IAAKI,EAAIK,GAAI,CACX,MAAMC,QAAkBN,EAAIO,OAE5B,YADAC,QAAQC,MAAM,6BAA8BH,EAAUI,QACtD,CAGF,MAAMC,QAAaX,EAAIO,OACvBC,QAAQI,IAAI,qBAAsBD,GAE9BA,IAASA,EAAKD,SACZrB,EAAUwB,OAAS,GAAKxB,EAAU,GAAGyB,KAAOH,EAAKG,IAE/CC,6BAA6B,2CAEnCzB,EAAa,CAACqB,KAEdrB,EAAa,GACf,OACO0B,GACPR,QAAQC,MAAM,4BAA6BO,EAAG,MA/B9CR,QAAQC,MAAM,oBAsClB,OAHAf,IACAD,EAAawB,YAAYvB,EAAgB,MAElC,IAAMwB,cAAczB,IAC1B,UAGA,MAAA,CACE0B,SAAqB,IAArB9B,EAAUwB,OACTO,MAAC,KAAED,SAAA,wBAEHC,EAAAA,IAAC,KAAA,CACED,WAAUE,IAAKC,GACdC,EAAAA,KAAC,KAAA,CAAqBC,UAAU,0BAC9BL,SAAA,CAAAC,MAAC,OAAII,UAAU,YAAaL,SAAAG,EAASG,aAAeH,EAASI,kBAC5D,MAAA,CAAKP,SAAA,CAAAG,EAASK,KAAK,MAAIL,EAASM,gBAF1BN,EAASR"}